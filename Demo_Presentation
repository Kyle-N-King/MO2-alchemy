USE employees;

--
# PROCEDURE
--
DROP PROCEDURE IF EXISTS average_salary2;
DELIMITER $$
CREATE PROCEDURE average_salary2()
BEGIN
	select
            AVG(salary)
            from
            salaries;
END$$

CALL average_salary2();

--
# procedure with parmeter
--

DROP PROCEDURE IF EXISTS emp_avg_salary2;

DELIMITER //
CREATE PROCEDURE emp_avg_salary2(IN p_emp_no INTEGER)
BEGIN
SELECT
	e.first_name, e.last_name, avg(s.salary)
FROM
	employees e
		JOIN
	salaries s ON e.emp_no = s.emp_no
WHERE
	e.emp_no = p_emp_no;
END //
DELIMITER ;


CALL emp_avg_salary2(10001);

--
# loop
--

DROP PROCEDURE IF EXISTS loop1;

DELIMITER $$
CREATE PROCEDURE Loop1()
BEGIN
	DECLARE x INT;
    SET x = 0;
    myloop: LOOP
		SET x = x + 1;
		SELECT x;
		IF x = 10 THEN
			LEAVE myloop;
		END IF;
	END LOOP myloop;
    SELECT x;
END $$
DELIMITER ;

CALL loop1();

--
#Temporary table
--

DROP TABLE IF EXISTS allresults2;

CREATE TEMPORARY TABLE allresults2 (
p_base_name varchar(255)
, p_base_amount int(3)
, p_ing_name VARCHAR(255)
, p_ing_amount int(3)
, heal decimal(10,2)
, cost decimal(10,2));

select * from allresults;

#Temporary table from another table
DROP TABLE IF EXISTS temp_dude;

SELECT * FROM employees LIMIT 1;

create temporary table temp_dude 
SELECT * FROM employees LIMIT 0;

select * from temp_dude;

--
# Case Study
--

use health_potions;

DROP TABLE IF EXISTS allresults;
DROP PROCEDURE allloopseadew;

DELIMITER $$
CREATE PROCEDURE allloopseadew(IN p_base_name VARCHAR(255), IN p_base_amount integer, IN p_ing_name VARCHAR(255), p_ing_amount integer, p_pot_units INTEGER(3))
BEGIN
	DECLARE x decimal(10,3);
    DECLARE v_heal decimal(10,3);
    DECLARE v_cost decimal(10,3);
    DECLaRE v_total_amount int(3);
    CREATE TEMPORARY TABLE allresults (p_base_name varchar(255), p_base_amount int(3), p_ing_name VARCHAR(255), p_ing_amount int(3), heal decimal(10,2), cost decimal(10,2));
    
    SET x = 0;
   
    loop1: LOOP
		SET x = x + 1;
        SET v_total_amount = 
			(SELECT p_base_amount + x);
		SET v_heal = 
			(SELECT 
				round(max((2*(2.1*(p_base_amount/v_total_amount))*1*(1+sqrt(x/v_total_amount)*m.multiplier_value)*p_pot_units)),3)
			FROM
				multiplier m
			WHERE
				m.ing_name = p_ing_name);
		SET v_cost = 
			(SELECT 
				m.price * x
			FROM
				multiplier m
			WHERE
				m.ing_name = p_ing_name);
        CALL sea_dew_potion('sea dew', 100, 'skadite', x, 10);
        IF x = 18 THEN
			LEAVE loop1;
		END IF;
		
        INSERT INTO allresults
        VALUES(p_base_name, p_base_amount, p_ing_name, x, v_heal, v_cost);
        
         INSERT INTO allresults
    VALUES ('sea dew', 100, 'skadite', 0, 24, 0);
    
	END LOOP loop1;
    SELECT p_base_name, p_base_amount, p_ing_name, p_ing_amount,
		m.price * p_ing_amount AS cost
	FROM
		multiplier m
	WHERE
		m.ing_name = p_ing_name;
    SELECT DISTINCT * FROM allresults;
END$$
DELIMITER ;


CALL allloopseadew('sea dew', 100, 'skadite', 0, 10);



-- https://public.tableau.com/app/profile/kyle.king2235/viz/MortalOnline2Alchemyingredients/DashBoard


