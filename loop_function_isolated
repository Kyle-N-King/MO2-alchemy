DELIMITER $$
-- Creating stored procedure to be called on

CREATE PROCEDURE allloopseadew(IN p_base_name VARCHAR(255), IN p_base_amount integer, IN p_ing_name VARCHAR(255), p_ing_amount integer, p_pot_units INTEGER(3))
BEGIN
	DECLARE x decimal(10,3);
    DECLARE v_heal decimal(10,3);
    DECLARE v_cost decimal(10,3);
    DECLaRE v_total_amount int(3);

-- Creating temp table

    CREATE TEMPORARY TABLE allresults (p_base_name varchar(255), p_base_amount int(3), p_ing_name VARCHAR(255), p_ing_amount int(3), heal decimal(10,2), cost decimal(10,2));
    
    SET x = 0;

-- Creating of Loop function

    loop1: LOOP
		SET x = x + 1;
        SET v_total_amount = 
			(SELECT p_base_amount + x);
		SET v_heal = 
		-- another stored procedure that returns amount of healing
			(SELECT 
				round(max((2*(2.1*(p_base_amount/v_total_amount))*1*(1+sqrt(x/v_total_amount)*m.multiplier_value)*p_pot_units)),3)
			FROM
				multiplier m
			WHERE
				m.ing_name = p_ing_name);
		SET v_cost = 
			(SELECT 
				m.price * x
			FROM
				multiplier m
			WHERE
				m.ing_name = p_ing_name);
        CALL sea_dew_potion('sea dew', 100, 'skadite', x, 10);
        IF x = 18 THEN
			LEAVE loop1;
	-- LOOPS THE STORED PROCEDURE UNTIL IT HAS 19 DIFFERENT POTIONS HAVE BEEN PRODUCED
	-- ALLOWS FOR COMPARISON OF HOW DIFFERENT QUANTITIES AFFECT AMOUNT OF HEALTH POINTS RETURNED
		END IF;
		
        INSERT INTO allresults
        VALUES(p_base_name, p_base_amount, p_ing_name, x, v_heal, v_cost);
        
         INSERT INTO allresults
    VALUES ('sea dew', 100, 'skadite', 0, 24, 0);
    
	END LOOP loop1;
    SELECT p_base_name, p_base_amount, p_ing_name, p_ing_amount,
		m.price * p_ing_amount AS cost
	FROM
		multiplier m
	WHERE
		m.ing_name = p_ing_name;
    SELECT DISTINCT * FROM allresults;
END$$
DELIMITER ;

DROP TABLE IF EXISTS allresults;
DROP PROCEDURE allloopseadew;
CALL allloopseadew('sea dew', 100, 'skadite', 0, 10);
